{"version":3,"sources":["components/Nav/index.js","assets/cover/me.png","components/About/index.js","components/ContactForm/index.js","utils/helpers.js","components/Portfolio/Project.js","components/Portfolio/index.js","components/Footer/index.js","components/Resume/index.js","App.js","serviceWorker.js","index.js"],"names":["Nav","props","setCurrentTab","tabs","className","map","tab","href","toLowerCase","onClick","About","src","coverImage","style","width","alt","ContactForm","useState","name","email","message","formState","setFormState","errorMessage","setErrorMessage","handleChange","e","target","isValid","test","String","validateEmail","value","length","data-testid","id","onSubmit","preventDefault","console","log","htmlFor","type","defaultValue","onBlur","rows","Project","tech","deployed","image","repo","classes","makeStyles","root","maxWidth","media","height","useStyles","Card","CardActionArea","CardMedia","title","CardContent","Typography","gutterBottom","variant","component","color","CardActions","Button","rel","Portfolio","project","Footer","BottomNavigation","showLabels","BottomNavigationAction","label","icon","Resume","download","App","currentTab","renderTab","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"8NA8BeA,EA3BH,SAACC,GAAW,IACdC,EAAwBD,EAAxBC,cAAeC,EAASF,EAATE,KACvB,OAEE,yBAAQC,UAAU,qBAAlB,UAEE,oBAAIA,UAAU,OAAd,2BACA,8BACE,oBAAIA,UAAU,0BAAd,SACGD,EAAKE,KAAI,SAACC,GAAD,OACR,oBAAIF,UAAU,OAAd,SACE,mBACEG,KAAM,IAAMD,EAAIE,cAChBC,QAAS,WACPP,EAAcI,IAHlB,SAMGA,KAPqBA,cCbvB,MAA0B,+BCkB1BI,MAff,WAEE,OACE,0BAASN,UAAU,OAAnB,UAEE,qBAAKO,IAAKC,EAAYR,UAAU,OAAOS,MAAO,CAAEC,MAAO,OAASC,IAAI,UACpE,qBAAKX,UAAU,OAAf,SACE,2S,QCoDOY,MA1Df,WAAwB,IAAD,EACaC,mBAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,QAAS,KADtD,mBACdC,EADc,KACHC,EADG,OAGmBL,mBAAS,IAH5B,mBAGdM,EAHc,KAGAC,EAHA,KAIbN,EAAyBG,EAAzBH,KAAMC,EAAmBE,EAAnBF,MAAOC,EAAYC,EAAZD,QAUfK,EAAe,SAACC,GACpB,GAAsB,UAAlBA,EAAEC,OAAOT,KAAkB,CAC7B,IAAMU,EChBH,SAAuBT,GAE5B,MADS,wJACCU,KAAKC,OAAOX,GAAOX,eDcXuB,CAAcL,EAAEC,OAAOK,OAIrCR,EAHGI,EAGa,GAFA,+BAKbF,EAAEC,OAAOK,MAAMC,OAGlBT,EAAgB,IAFhBA,EAAgB,GAAD,OAAIE,EAAEC,OAAOT,KAAb,mBAOrB,OACE,oCACE,oBAAIgB,cAAY,QAAhB,wBACA,uBAAMC,GAAG,eAAeC,SA5BP,SAACV,GACpBA,EAAEW,iBACGd,IACHD,EAAa,eAAGI,EAAEC,OAAOT,KAAOQ,EAAEC,OAAOK,QACzCM,QAAQC,IAAI,OAAQlB,KAwBpB,UACE,gCACE,uBAAOmB,QAAQ,OAAf,mBACA,uBAAOC,KAAK,OAAOvB,KAAK,OAAOwB,aAAcxB,EAAMyB,OAAQlB,OAE7D,gCACE,uBAAOe,QAAQ,QAAf,4BACA,uBAAOC,KAAK,QAAQvB,KAAK,QAAQwB,aAAcvB,EAAOwB,OAAQlB,OAEhE,gCACE,uBAAOe,QAAQ,UAAf,sBACA,0BAAUtB,KAAK,UAAU0B,KAAK,IAAIF,aAActB,EAASuB,OAAQlB,OAElEF,GACC,8BACE,mBAAGnB,UAAU,aAAb,SAA2BmB,MAG/B,wBAAQW,cAAY,SAASO,KAAK,SAAlC,2B,gEEFOI,EA3CC,SAAC5C,GAAW,IAClBiB,EAAuCjB,EAAvCiB,KAAM4B,EAAiC7C,EAAjC6C,KAAMC,EAA2B9C,EAA3B8C,SAAUC,EAAiB/C,EAAjB+C,MAAOC,EAAUhD,EAAVgD,KAW/BC,EATYC,YAAW,CAC3BC,KAAM,CACJC,SAAU,KAEZC,MAAO,CACLC,OAAQ,MAIEC,GAEd,OACE,cAACC,EAAA,EAAD,CAAMrD,UAAW8C,EAAQE,KAAzB,SACE,eAACM,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWhD,IAAKqC,EAAOY,MAAO1C,IAC9B,eAAC2C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKC,UAAU,KAAhD,SACG/C,IAEH,cAAC4C,EAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBD,UAAU,IAA5D,SACGnB,OAGL,eAACqB,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,mBAAG7D,KAAMwC,EAAUpB,OAAO,SAAS0C,IAAI,aAAvC,oCAIF,cAACD,EAAA,EAAD,UACE,mBAAG7D,KAAM0C,EAAMtB,OAAO,SAAS0C,IAAI,aAAnC,0CCCGC,EA1CG,WAyBhB,OACE,yBAASlE,UAAU,qBAAnB,SAzBe,CACf,CACEc,KAAM,aACN4B,KAAM,wCACNC,SAAU,4CACVC,MAAO,oCACPC,KAAM,0CAER,CACE/B,KAAM,YACN4B,KAAM,2BACNC,SAAU,gDACVC,MAAO,GACPC,KAAM,iDAER,CACI/B,KAAM,eACN4B,KAAM,2BACNC,SAAU,sCACVC,MAAO,kCACPC,KAAM,iDAME5C,KAAI,SAACkE,GAAD,OACZ,qBAAKnE,UAAU,yBAAf,SACE,cAAC,EAAD,CACEc,KAAMqD,EAAQrD,KACd4B,KAAMyB,EAAQzB,KACdC,SAAUwB,EAAQxB,SAClBC,MAAOuB,EAAQvB,MACfC,KAAMsB,EAAQtB,e,kDCRXuB,EAtBA,WACb,OACE,8BACE,eAACC,EAAA,EAAD,CAAkBC,YAAU,EAA5B,UACE,cAACC,EAAA,EAAD,CACEC,MAAM,SACNC,KAAM,cAAC,IAAD,IACNtE,KAAK,gCACLoB,OAAO,WAET,cAACgD,EAAA,EAAD,CACEC,MAAM,WACNC,KAAM,cAAC,IAAD,IACNtE,KAAK,uDACLoB,OAAO,iBCmBFmD,EAtCA,WACb,OACE,sBAAK1E,UAAU,kBAAf,UACE,mBACEG,KAAK,mGACLoB,OAAO,SACP0C,IAAI,aACJU,UAAQ,EAJV,6BAQA,yDACA,+BACE,4CACA,uCACA,sCACA,qCACA,2CACA,2CAEF,wDACA,+BACE,uCACA,yCACA,4CAGF,+BACN,8CACQ,wCACQ,iEAER,mECMOC,MA9Bf,WACE,IAAM7E,EAAO,CAAC,QAAS,WAAY,UAAW,UADjC,EAEuBc,mBAASd,EAAK,IAFrC,mBAEN8E,EAFM,KAEM/E,EAFN,KAoBb,OACE,qCACE,cAAC,EAAD,CAAKC,KAAMA,EAAM8E,WAAYA,EAAY/E,cAAeA,IACxD,+BAnBc,WAChB,OAAQ+E,GACN,IAAK,QACH,OAAO,cAAC,EAAD,IACT,IAAK,WACH,OAAO,cAAC,EAAD,IACT,IAAK,UACH,OAAO,cAAC,EAAD,IACR,IAAK,SACH,OAAO,cAAC,EAAD,IAGV,QACE,OAAO,cAAC,EAAD,KAOTC,KAEA,cAAC,EAAD,QCvBcC,QACa,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SD0HlB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL9D,QAAQ8D,MAAMA,EAAMhF,c","file":"static/js/main.c2e69c93.chunk.js","sourcesContent":["import React from \"react\";\n\n\nconst Nav = (props) => {\n  const { setCurrentTab, tabs } = props;\n  return (\n    \n    <header className=\"flex-row px-1 py-1\">\n            \n      <h1 className=\"px-2\">Daniela Acuna</h1>\n      <nav>\n        <ul className=\"flex-row justify-center\">\n          {tabs.map((tab) => (\n            <li className=\"mx-2\" key={tab}>\n              <a\n                href={\"#\" + tab.toLowerCase()}\n                onClick={() => {\n                  setCurrentTab(tab);\n                }}\n              >\n                {tab}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Nav;","export default __webpack_public_path__ + \"static/media/me.4c2e5efb.png\";","import coverImage from \"../../assets/cover/me.png\";\nimport React from 'react'\n\nfunction About() {\n\n  return (\n    <section className=\"my-5\" >\n\n      <img src={coverImage} className=\"my-2\" style={{ width: \"20%\" }} alt=\"cover\" />\n      <div className=\"my-2\">\n        <p>\n          My name is Daniela Acuna. I'm originally from Victoria, Texas, but I've been in Austin almost 8 years. I'm currently employed by Accenture. I investigate financial fraud for social media company. Im recent graduate from the University of Texas Coding Bootcamp. \n      </p>\n      </div>\n    </section>\n  )\n}\n\nexport default About;\n","import React, { useState } from 'react';\n\nimport { validateEmail } from '../../utils/helpers';\n\nfunction ContactForm() {\n  const [formState, setFormState] = useState({ name: '', email: '', message: '' });\n\n  const [errorMessage, setErrorMessage] = useState('');\n  const { name, email, message } = formState;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!errorMessage) {\n      setFormState({ [e.target.name]: e.target.value });\n      console.log('Form', formState);\n    }\n  };\n\n  const handleChange = (e) => {\n    if (e.target.name === 'email') {\n      const isValid = validateEmail(e.target.value);\n      if (!isValid) {\n        setErrorMessage('Your email is invalid.');\n      } else {\n        setErrorMessage('');\n      }\n    } else {\n      if (!e.target.value.length) {\n        setErrorMessage(`${e.target.name} is required.`);\n      } else {\n        setErrorMessage('');\n      }\n    }\n  };\n\n  return (\n    <section>\n      <h1 data-testid=\"h1tag\">Contact me</h1>\n      <form id=\"contact-form\" onSubmit={handleSubmit}>\n        <div>\n          <label htmlFor=\"name\">Name:</label>\n          <input type=\"text\" name=\"name\" defaultValue={name} onBlur={handleChange} />\n        </div>\n        <div>\n          <label htmlFor=\"email\">Email address:</label>\n          <input type=\"email\" name=\"email\" defaultValue={email} onBlur={handleChange} />\n        </div>\n        <div>\n          <label htmlFor=\"message\">Message:</label>\n          <textarea name=\"message\" rows=\"5\" defaultValue={message} onBlur={handleChange} />\n        </div>\n        {errorMessage && (\n          <div>\n            <p className=\"error-text\">{errorMessage}</p>\n          </div>\n        )}\n        <button data-testid=\"button\" type=\"submit\">Submit</button>\n      </form>\n    </section>\n  );\n}\n\nexport default ContactForm;","export function capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n  \n  export function validateEmail(email) {\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }","import React from \"react\";\nimport Card from \"@material-ui/core/Card\";\n\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { CardActionArea } from \"@material-ui/core\";\nimport {makeStyles} from '@material-ui/core/styles';\n\nconst Project = (props) => {\n  const { name, tech, deployed, image, repo, } = props;\n\n  const useStyles = makeStyles({\n    root: {\n      maxWidth: 500,\n    },\n    media: {\n      height: 140,\n    },\n  });\n\n  const classes=useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <CardActionArea>\n        <CardMedia src={image} title={name} />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            {name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            {tech}\n          </Typography>\n        </CardContent>\n        <CardActions>\n          <Button>\n            <a href={deployed} target=\"_blank\" rel=\"noreferrer\">\n              Deployed Application\n            </a>\n          </Button>\n          <Button>\n            <a href={repo} target=\"_blank\" rel=\"noreferrer\">\n              Github Repository\n            </a>\n          </Button>\n        </CardActions>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default Project;","import React from \"react\";\nimport Project from \"./Project\";\n   \nconst Portfolio = () => {\n  const projects = [\n    {\n      name: \"Music-Line\",\n      tech: \"Javascript/Express/Handlebars.js/Node\",\n      deployed: \"https://guarded-dawn-15470.herokuapp.com/\",\n      image: \"../../assets/images/musicline.png\",\n      repo: \"https://github.com/axeliono/Music-Line\",\n    },\n    {\n      name: \"Recipedia\",\n      tech: \"SASS/HTML/JavaScript/API\",\n      deployed: \"https://frecklescherokee.github.io/recipedia/\",\n      image: \"\",\n      repo: \"https://github.com/frecklescherokee/recipedia\",\n    },\n    {\n        name: \"Weddings.com\",\n        tech: \"SASS/HTML/JavaScript/API\",\n        deployed: \"https://wedding-spot.herokuapp.com/\",\n        image: \"../../assets/images/wedding.png\",\n        repo: \"https://github.com/frecklescherokee/weddings\",\n      },\n    \n  ];\n  return (\n    <section className=\"projects-container\">\n      {projects.map((project) => (\n        <div className=\"project-card my-2 mx-2\">\n          <Project\n            name={project.name}\n            tech={project.tech}\n            deployed={project.deployed}\n            image={project.image}\n            repo={project.repo}\n          />\n        </div>\n      ))}\n    </section>\n  );\n};\n\nexport default Portfolio;","import React from \"react\";\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\nimport GithubIcon from \"@material-ui/icons/GitHub\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\n\n\nconst Footer = () => {\n  return (\n    <div>\n      <BottomNavigation showLabels>\n        <BottomNavigationAction\n          label=\"Github\"\n          icon={<GithubIcon />}\n          href=\"https://github.com/daniela-93\"\n          target=\"_blank\"\n        />\n        <BottomNavigationAction\n          label=\"LinkedIn\"\n          icon={<LinkedInIcon />}\n          href=\"https://www.linkedin.com/in/daniela-acuna-6396021b6/\"\n          target=\"_blank\"\n        />\n       \n      </BottomNavigation>\n    </div>\n  );\n};\n\nexport default Footer;","import React from \"react\";\n\nconst Resume = () => {\n  return (\n    <div className=\"proficieny-list\">\n      <a\n        href=\"https://docs.google.com/document/d/1ykudWC5lWbMkzHNNRofgPDmEInuKuu1zvv0bRMkyxjA/edit?usp=sharing\"\n        target=\"_blank\"\n        rel=\"noreferrer\"\n        download\n      >\n        Download Resume\n      </a>\n      <h3>Front-end Proficiencies</h3>\n      <ul>\n        <li>Javascript</li>\n        <li>React</li>\n        <li>HTML</li>\n        <li>CSS</li>\n        <li>Bootstrap</li>\n        <li>JQuery</li>\n      </ul>\n      <h3>Back-end Proficiencies</h3>\n      <ul>\n        <li>MySQL</li>\n        <li>Node.js</li>\n        <li>Express</li>\n    \n      </ul>\n      <ul>\n<h3>Contact Info</h3> \n        <li>\n          email:<email>daniela.acuna93@gmail.com</email>\n        </li>\n        <li>Phone Number: 512-801-3403</li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Resume;","import React, { useState } from \"react\";\nimport \"./index.css\";\nimport \"./App.css\";\nimport Nav from \"./components/Nav\";\nimport About from \"./components/About\";\nimport ContactForm from './components/ContactForm'\nimport Portfolio from \"./components/Portfolio\";\nimport Footer from './components/Footer'\nimport Resume from \"./components/Resume\";\n\nfunction App() {\n  const tabs = [\"ABOUT\", \"PROJECTS\", \"CONTACT\", \"RESUME\", ];\n  const [currentTab, setCurrentTab] = useState(tabs[0]);\n\n  const renderTab = () => {\n    switch (currentTab) {\n      case \"ABOUT\":\n        return <About />;\n      case \"PROJECTS\":\n        return <Portfolio/>\n      case \"CONTACT\":\n        return <ContactForm/>;\n       case \"RESUME\":\n         return <Resume/>\n     \n\n      default:\n        return <About />;\n    }\n  };\n  return (\n    <>\n      <Nav tabs={tabs} currentTab={currentTab} setCurrentTab={setCurrentTab} />\n      <main>{\n      renderTab()}\n      </main>\n      <Footer/>\n    </>\n  );\n}\nexport default App;\n","\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}